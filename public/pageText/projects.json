{"Interactive_Shell":"This project was part of my Operating Systems class focusing on multithreading and lower level system interactions. This was my 3rd project written in C, and it's goal is to closely mimic the command line interface functionality provided in unix systems. The 'small shell' program provides the user the ability to run other programs in the foreground or background using multithreading, redirect input or output of programs being run to files, expand variables found in commands, and run many commands that the standard unix interactive shell has access to. With the Operating Systems class we have been required to only use data types and library functions available in the C99 standard, and compile the program using the gcc compiler.",
 "Personal_Website": "The website you are currently viewing was created by me, using Express.js, Bootstrap and Azure's serverless deployment service. I  wanted to create a site that could provide additional detail into some of my projects, centralize contant information as well as provide a location for a possible employer to get to know me better. The site will be updated with new projects from time to time as I complete more complex work and refine my skills!",
 "Content_Generator_Microservice": "This project was made in connection with my Software Engineering I class for OSU, in which we learned about creating a GUI with cognitive style hueristics in mind, using an Agile/Scrum development cycle to do rolling releases to the functionality, and practice how to research and use third party libraries. The project was structured as a Microservice, with the requirement that our service would both call to another classmate's service for data to consume, as well as be available for another Microservice to call upon for data to use. My project was a \"Content Generator\", which would accept Keywords through the Graphical user interface or a .csv file, and scrape wikipedia for a paragraph relating to those keywords. For my interaction with another Microservice, I also created functionality with a classmate's service that provided amazon shopping results to show top 10 related products for the provided keywords. To implement this, I utilized the BeautifulSoup library for web-scraping, the Tkinter library for the GUI, and the subprocess library for running the classmate's microservice to produce the shopping results with my keyword inputs",
 "MotoRideMatch_Database_driven_website": "This project was a Full stack website I created with Brittany Leggett in the Introduction to Databases class from my degree program. The site included a Node.js server running on an AWS EC2 instance, front end functionality for creating user accounts that were stored in the database, display and filtering of motorcycle ride database values as well as the ability to log in as an administrator to perform Create/Update/Delete functionalities for the tables in the database. We shared responsibility for bth the front end and back end, with the majority of my work focusing on back end functionality and database interactions"}